@startuml tasks_Diagram

entity "tasks" as tasks {
  _id : ObjectId
  triggerId : ObjectId
  taskTemplateId : ObjectId
  userGroupId : ObjectId
  assetId : ObjectId
  assignee : ObjectId
  workflowId : ObjectId
  workflowDetails : object
  name : string
  description : string
  trainingVideoId : unknown
  attachmentId : unknown
  priority : int
  taskType : string
  taskCompletion : string
  assigneeMethod : string
  emergencyTaskCommonId : unknown
  taskCompletionState : string
  complexity : int
  taskDeadlineTime : int
  taskExpectedTime : int
  taskCompletionTime : int
  equipmentSelected : unknown
  skillsSelected : list
  dataEntry : boolean
  sensorId : unknown
  richTextContent : string
  escalations : list
  componentActions : list
  isObsolete : boolean
  taskComponentId : ObjectId
  taskCompleted : boolean
  isArchived : boolean
  createdBy : unknown
  createdAt : object
  updatedAt : object
  __v : int
}

entity "workflowDetails" as workflowDetails {
  workflowId : ObjectId
  name : string
  description : string
  nodes : list
  edges : list
  workflowActions : list
  transitionStatus : string
}

entity "nodes" as nodes {
  id : string
  type : string
  position : object
  data : object
  width : int
  height : int
  selected : boolean
  positionAbsolute : object
  dragging : boolean
}

entity "position" as position {
  x : float
  y : float
}

entity "data" as data {
  type : string
  label : string
}

entity "positionAbsolute" as positionAbsolute {
  x : float
  y : float
}

entity "edges" as edges {
  id : string
  source : string
  sourceHandle : string
  target : string
  targetHandle : string
  type : string
  animated : boolean
  data : object
  markerEnd : object
}

entity "markerEnd" as markerEnd {
  type : string
  width : int
  height : int
  color : string
}

entity "workflowActions" as workflowActions {
  nodeId : string
  nodeLabel : string
  actionNodes : list
  _id : string
}

entity "actionNodes" as actionNodes {
  id : string
  label : string
  selectedAction : string
  selectedActionValue : string
  _id : string
  actionIds : list
}

entity "skillsSelected" as skillsSelected {
  _id : ObjectId
}

entity "escalations" as escalations {
  timeInMinutes : int
  communicationMedium : string
  userIds : list
  isNotified : boolean
}

entity "userIds" as userIds {
  _id : ObjectId
}

entity "componentActions" as componentActions {
  nodeId : string
  actionNodes : list
}

entity "actionIds" as actionIds {
  _id : ObjectId
}

entity "createdAt" as createdAt {
}

entity "updatedAt" as updatedAt {
}


' Relationships
tasks ||--|| workflowDetails : has_workflowDetails
workflowDetails ||--o{ nodes : has_nodes
nodes ||--|| position : has_position
nodes ||--|| data : has_data
nodes ||--|| positionAbsolute : has_positionAbsolute
workflowDetails ||--o{ edges : has_edges
edges ||--|| data : has_data
edges ||--|| markerEnd : has_markerEnd
workflowDetails ||--o{ workflowActions : has_workflowActions
workflowActions ||--o{ actionNodes : has_actionNodes
tasks ||--o{ skillsSelected : has_skillsSelected
tasks ||--o{ escalations : has_escalations
escalations ||--o{ userIds : has_userIds
tasks ||--o{ componentActions : has_componentActions
componentActions ||--o{ actionNodes : has_actionNodes
actionNodes ||--o{ actionIds : has_actionIds
tasks ||--|| createdAt : has_createdAt
tasks ||--|| updatedAt : has_updatedAt
@enduml